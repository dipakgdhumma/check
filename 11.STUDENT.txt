#include <iostream>
#include <fstream>
#include <string>
using namespace std;
// Structure to represent a student
struct Student {
int rollNumber;
string name;
string division;
string address;
};
// Function to add student information to the file
void addStudent(const string& filename, const Student& student) {
ofstream file(filename, ios::app); // Open file in append mode
if (file.is_open()) {
file << student.rollNumber << " " << student.name << " " << student.division << " " <<
student.address << endl;
cout << "Student information added successfully." << endl;
} else {
cerr << "Error: Unable to open file." << endl;
}
file.close();
}
// Function to delete student information from the file
void deleteStudent(const string& filename, int rollNumber) {
ifstream inFile(filename);
ofstream outFile("temp.txt");
if (!inFile || !outFile) {
cerr << "Error: Unable to open file." << endl;
return;
}
bool found = false;
int currentRollNumber;
string name, division, address;
while (inFile >> currentRollNumber >> name >> division >> address) {
if (currentRollNumber == rollNumber) {
found = true;
cout << "Student information deleted successfully." << endl;
continue;
}
outFile << currentRollNumber << " " << name << " " << division << " " << address <<
endl;
}
inFile.close();
outFile.close();
remove(filename.c_str());
rename("temp.txt", filename.c_str());
if (!found) {
cerr << "Error: Student information not found." << endl;
}
}
// Function to display student information based on roll number
void displayStudent(const string& filename, int rollNumber) {
ifstream file(filename);
if (!file) {
cerr << "Error: Unable to open file." << endl;
return;
}
int currentRollNumber;
string name, division, address;
bool found = false;
while (file >> currentRollNumber >> name >> division >> address) {
if (currentRollNumber == rollNumber) {
found = true;
cout << "Roll Number: " << currentRollNumber << endl;
cout << "Name: " << name << endl;
cout << "Division: " << division << endl;
cout << "Address: " << address << endl;
break;
}
}
file.close();
if (!found) {
cerr << "Error: Student information not found." << endl;
}
}
int main() {
string filename = "student_info.txt";
int choice, rollNumber;
Student newStudent;
cout << "1. Add Student\n2. Delete Student\n3. Display Student\nEnter your choice: ";
cin >> choice;
switch (choice) {
case 1:
cout << "Enter Roll Number: ";
cin >> newStudent.rollNumber;
cin.ignore(); // Ignore newline character
cout << "Enter Name: ";
getline(cin, newStudent.name);
cout << "Enter Division: ";
getline(cin, newStudent.division);
cout << "Enter Address: ";
getline(cin, newStudent.address);
addStudent(filename, newStudent);
break;
case 2:
cout << "Enter Roll Number to delete: ";
cin >> rollNumber;
deleteStudent(filename, rollNumber);
break;
case 3:
cout << "Enter Roll Number to display: ";
cin >> rollNumber;
displayStudent(filename, rollNumber);
break;
default:
cerr << "Error: Invalid choice." << endl;
break;
}
return 0;
}