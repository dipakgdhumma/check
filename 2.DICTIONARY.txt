def hash_function(key, size):
    return hash(key) % size

def insert(dictionary, key, value, size, with_replacement=False):
    index = hash_function(key, size)
    entry = [key, value]

    if dictionary[index] is None:
        dictionary[index] = [entry]
    else:
        if with_replacement:
            for i, element in enumerate(dictionary[index]):
                if element[0] == key:
                    dictionary[index][i][1] = value
                    return
            dictionary[index].append(entry)
        else:
            for element in dictionary[index]:
                if element[0] == key:
                    return
            dictionary[index].append(entry)

def find(dictionary, key, size):
    index = hash_function(key, size)
    if dictionary[index] is None:
        return None
    else:
        for entry in dictionary[index]:
            if entry[0] == key:
                return entry[1]
    return None

def delete(dictionary, key, size):
    index = hash_function(key, size)
    if dictionary[index] is None:
        return False
    else:
        for i, entry in enumerate(dictionary[index]):
            if entry[0] == key:
                dictionary[index].pop(i)
                return True
    return False

# User input and operations
size = int(input("Enter the size of the dictionary: "))
dictionary = [None] * size
choice = None
with_replacement = False  # Initialize the flag

while choice != '5':
    print("\n1. Insert")
    print("2. Find")
    print("3. Delete")
    print("4. Chaining with/without replacement")
    print("5. Exit")
    choice = input("Enter your choice: ")

    if choice == '1':
        key = input("Enter the key: ")
        value = input("Enter the value: ")
        insert(dictionary, key, value, size, with_replacement)

    elif choice == '2':
        key = input("Enter the key to find: ")
        result = find(dictionary, key, size)
        if result is not None:
            print(f"Value for key '{key}': {result}")
        else:
            print(f"Key '{key}' not found")

    elif choice == '3':
        key = input("Enter the key to delete: ")
        if delete(dictionary, key, size):
            print(f"Key '{key}' deleted successfully")
        else:
            print(f"Key '{key}' not found")

    elif choice == '4':
        replacement_choice = input("Enter 'y' for chaining with replacement, 'n' for without replacement: ")
        with_replacement = replacement_choice.lower() == 'y'

print("Exiting...")
